name: Playwright Tests
on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "21"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install -g yarn && yarn

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps chromium

      - name: Run Playwright tests
        run: yarn playwright test

      - name: Extract PR details and file contents
        id: extract
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            let fileContents = "";
            for (const file of files.data) {
              if (file.status === "modified" || file.status === "added") {
                const content = await github.request(file.contents_url, {
                  headers: { Authorization: `Bearer ${process.env.GITHUB_TOKEN}` },
                });
                const decodedContent = Buffer.from(content.data.content, 'base64').toString('utf-8');
                fileContents += `\n\nFile: ${file.filename}\n\n${decodedContent}`;
              }
            }

            // Set outputs explicitly
            core.setOutput("description", pr.body || "");
            core.setOutput("files", fileContents || "");

      - name: Run summarization script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          yarn tsx ai-helper/results_suggestions.ts "${{ steps.extract.outputs.description }}" "${{ steps.extract.outputs.files }}"

      - name: Debug Extracted Outputs
        run: |
          echo "Description: ${{ steps.extract.outputs.description }}"
          echo "Files: ${{ steps.extract.outputs.files }}"

      - name: Update PR description with summary
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const summary = process.env.summary;
            github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: `**AI-Generated Summary:**\n\n${summary}\n\n---\n\n${context.payload.pull_request.body}`
            });

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: test-results.json
          retention-days: 30
